
#include <gmock/gmock.h>

#include <cstring>
#include <memory>

#include "nalu.h"

using namespace ::std;
using namespace ::testing;

TEST(nalu_test, nal_parse)
{
    uint8_t data[] = {
            // SPS 14 bytes
            0x00, 0x00, 0x00, 0x01, 0x67, 0x42, 0x80, 0x29,
            0x95, 0xa0, 0x14, 0x01, 0x6c, 0x40,

            // PPS 8 bytes
            0x00, 0x00, 0x00, 0x01, 0x68, 0xce, 0x3c, 0x80,
    };
    size_t data_size = sizeof(data);
    size_t offset = 0;

    size_t len = nal_parse(data + offset, data_size);
    EXPECT_EQ(14, len);

    offset += len;
    data_size -= len;
    len = nal_parse(data + offset, data_size);
    EXPECT_EQ(8, len);

    offset += len;
    data_size -= len;
    len = nal_parse(data + offset, data_size);
    EXPECT_EQ(0, len);
}

TEST(nalu_test, nal_parse_invalid)
{
    uint8_t data[] = { 0x68, 0xce, 0x3c, 0x80 };
    size_t data_size = sizeof(data);

    size_t len = nal_parse(data, data_size);
    EXPECT_EQ(0, len);
}

TEST(nalu_test, nal_type)
{
    uint8_t sps[] = {
            // SPS 14 bytes
            0x00, 0x00, 0x00, 0x01, 0x67, 0x42, 0x80, 0x29,
            0x95, 0xa0, 0x14, 0x01, 0x6c, 0x40,
    };
    EXPECT_EQ(H264_NAL_SPS, nal_type(sps, sizeof(sps)));

    uint8_t pps[] = { 0x00, 0x00, 0x00, 0x01, 0x68, 0xce, 0x3c, 0x80 };
    EXPECT_EQ(H264_NAL_PPS, nal_type(pps, sizeof(pps)));

    uint8_t idr[] = {
            // IDR_SLICE 32 bytes (partial)
            0x00, 0x00, 0x00, 0x01, 0x25, 0xb8, 0x20, 0x02,
            0xbf, 0xbe, 0x99, 0x45, 0x91, 0xe7, 0x7f, 0xf8,
            0x7d, 0xda, 0x1d, 0x86, 0x27, 0x8a, 0x98, 0xab,
            0x9a, 0x89, 0xf2, 0xf8, 0x85, 0x4d, 0x2b, 0x00,
    };
    EXPECT_EQ(H264_NAL_IDR_SLICE, nal_type(idr, sizeof(idr)));

    uint8_t slice[] = {
            // SLICE 32 bytes (partial)
            0x00, 0x00, 0x00, 0x01, 0x41, 0xe2, 0x0e, 0x17,
            0x7c, 0x1f, 0xdf, 0x30, 0x4b, 0x80, 0xe1, 0x4b,
            0xd3, 0x21, 0xc4, 0x17, 0x05, 0x41, 0x69, 0x6f,
            0xf0, 0x61, 0x14, 0xb2, 0x84, 0x52, 0xff, 0x28,
    };
    EXPECT_EQ(H264_NAL_SLICE, nal_type(slice, sizeof(slice)));

    uint8_t sei[] = {
            // SEI 34 bytes
            0x00, 0x00, 0x00, 0x01, 0x06, 0x05, 0x1a, 0x47,
            0x56, 0x4a, 0xdc, 0x5c, 0x4c, 0x43, 0x3f, 0x94,
            0xef, 0xc5, 0x11, 0x3c, 0xd1, 0x43, 0xa8, 0x01,
            0xdd, 0xcc, 0xcc, 0xdd, 0x02, 0x00, 0x7a, 0x12,
            0x00, 0x80,
    };
    EXPECT_EQ(H264_NAL_SEI, nal_type(sei, sizeof(sei)));
}

TEST(nalu_test, nal_type_invalid)
{
    uint8_t data[] = { 0x68, 0xce, 0x3c, 0x80 };
    EXPECT_EQ(0, nal_type(data, sizeof(data)));
}

// vim:ts=4:sw=4:et
